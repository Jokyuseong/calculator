{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["days","wage","nowDate","Date","nextYear","setFullYear","getFullYear","options","expires","comma","data","toString","replace","App","useCookies","cookies","setCookie","useState","username","setUsername","textMessage","setTextMessage","slackId","setSlackId","values","mon","tue","wed","thu","fri","setValues","personalValues","setPersonalValues","sum","co","pers","setSum","calSum","setCalSum","slackToken","setSlackToken","isAuth","setIsAuth","tossOpenAgree","parseInt","setTossOpenAgree","setCookies","tempSum","tempCalSum","type","useEffect","console","log","process","Object","keys","forEach","day","isNaN","temp","valueInputHandler","value","target","postToSlack","channel","text","a","require","WebClient","web","chat","postMessage","getTossLink","amount","axios","post","apiKey","bankName","bankAccountNo","message","tossLinkRes","link","success","window","open","sendButtonOnClickHandler","Error","alert","finalMessage","confirm","tossLink","error","authButtonOnClickHandler","Container","className","Row","Col","lg","Card","bg","Body","Form","Group","controlId","Check","checked","onChange","agree","label","Button","style","margin","size","onClick","variant","map","i","Label","column","Control","onFocus","onInput","event","Footer","placeholder","block","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f325e28b.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\nimport {useEffect, useState} from 'react'\nimport {Button, Card, Col, Container, Form, Row} from 'react-bootstrap'\nimport {useCookies} from 'react-cookie'\nimport './App.css'\nimport axios from 'axios'\n\n// const managerId = 'UKPCGGH0B'\nconst managerId = 'U021K8944CU'\nconst days = ['월', '화', '수', '목', '금']\nconst wage = 6000\n\nconst nowDate = new Date()\nconst nextYear = new Date()\n\nnextYear.setFullYear(nowDate.getFullYear() + 1)\n\nconst options = {expires: nextYear}\n\nconst comma = (data) => data.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\nfunction App() {\n  const [cookies, setCookie] = useCookies(['rememberValues'])\n  const [username, setUsername] = useState(cookies.username || '')\n  const [textMessage, setTextMessage] = useState(cookies.textMessage || '')\n  const [slackId, setSlackId] = useState(cookies.slackId || '')\n  const [values, setValues] = useState(\n    cookies.values || {mon: 0, tue: 0, wed: 0, thu: 0, fri: 0},\n  )\n  const [personalValues, setPersonalValues] = useState(\n    cookies.personalValues || {mon: 0, tue: 0, wed: 0, thu: 0, fri: 0},\n  )\n  const [sum, setSum] = useState(cookies.sum || {co: 0, pers: 0})\n  const [calSum, setCalSum] = useState(cookies.calSum || {co: 0, pers: 0})\n  const [slackToken, setSlackToken] = useState(cookies.slackToken || '')\n  const [isAuth, setIsAuth] = useState(cookies.isAuth || '')\n  const [tossOpenAgree, setTossOpenAgree] = useState(\n    cookies.tossOpenAgree ? parseInt(cookies.tossOpenAgree) : 1,\n  )\n\n  const setCookies = (tempSum, tempCalSum, type) => {\n    setSum({...tempSum})\n    setCalSum({...tempCalSum})\n    setCookie('sum', {...tempSum}, options)\n    setCookie('calSum', {...tempCalSum}, options)\n    if (type === 'personal') {\n      setCookie('personalValues', personalValues, options)\n    } else {\n      setCookie('values', values, options)\n    }\n  }\n\n  useEffect(() => {\n    console.log(process.env.REACT_APP_TEST)\n\n    let tempSum = {...sum, co: 0}\n    let tempCalSum = {...calSum, co: 0}\n\n    Object.keys(values).forEach((day) => {\n      if (typeof values[day] !== 'number' || isNaN(values[day])) return\n      let temp = values[day] - wage\n      if (temp < 0) temp = 0\n\n      tempSum.co += values[day]\n      tempCalSum.co += temp\n    })\n\n    setCookies(tempSum, tempCalSum, 'coperation')\n  }, [values])\n\n  useEffect(() => {\n    let tempSum = {...sum, pers: 0}\n    let tempCalSum = {...calSum, pers: 0}\n\n    Object.keys(personalValues).forEach((day) => {\n      if (typeof personalValues[day] !== 'number' || isNaN(personalValues[day]))\n        return\n      if (personalValues[day] > wage) {\n        tempCalSum.pers += wage\n      } else {\n        tempCalSum.pers += personalValues[day]\n      }\n      tempSum.pers += personalValues[day]\n    })\n\n    setCookies(tempSum, tempCalSum, 'personal')\n  }, [personalValues])\n\n  const usernameInputHandler = (e) => {\n    setUsername(e.target.value)\n    setCookie('username', e.target.value, options)\n  }\n\n  const slackIdInputHandler = (e) => {\n    setSlackId(e.target.value)\n    setCookie('slackId', e.target.value, options)\n  }\n\n  const textMessageInputHandler = (value) => {\n    setTextMessage(value)\n    setCookie('textMessage', value, options)\n  }\n\n  const valueInputHandler = (value, day, target) => {\n    if (day === 'token') {\n      setSlackToken(value)\n      setCookie('slackToken', value, options)\n      return\n    }\n    if (target === 'personal') {\n      setPersonalValues({...personalValues, [day]: value})\n    } else {\n      setValues({...values, [day]: value})\n    }\n  }\n\n  async function postToSlack(channel, text) {\n    const {WebClient} = require('@slack/client')\n    const web = new WebClient(slackToken)\n\n    return web.chat.postMessage({channel, text})\n  }\n\n  const getTossLink = async (amount) => {\n    const tossLinkRes = await axios.post(\n      'https://toss.im/transfer-web/linkgen-api/link',\n      {\n        apiKey: '87489d67602649268f4372f91a91b03e',\n        bankName: '기업',\n        bankAccountNo: '54004018301018',\n        message: username,\n        amount,\n      },\n    )\n    const {link} = tossLinkRes.data.success\n    window.open(link)\n    return link\n  }\n\n  const sendButtonOnClickHandler = async () => {\n    try {\n      if (!sum.co && !sum.pers) {\n        throw new Error('전송할 내용이 없습니다.')\n      }\n    } catch (err) {\n      alert(err.message)\n      return\n    }\n\n    let finalMessage = ''\n    if (sum.pers > 0) {\n      finalMessage += `[개인카드] ${username} / 총지출: ${sum.pers} / 회사부담: ${calSum.pers}`\n    }\n    if (sum.co > 0) {\n      if (finalMessage) finalMessage += '\\n'\n      finalMessage += `[법인카드] ${username} / 총지출: ${sum.co} / 개인부담: ${calSum.co}`\n    }\n    if (textMessage) {\n      finalMessage += `\\n${textMessage}`\n    }\n    if (window.confirm(`${finalMessage}\\n전송하시겠습니까?`)) {\n      try {\n        if (sum.pers > 0 || sum.co > 0) {\n          let tossLink = ''\n          if (calSum.co > 0 && tossOpenAgree) {\n            tossLink = await getTossLink(calSum.co)\n          }\n          await postToSlack(managerId, `${finalMessage}\\n<@${slackId}>`)\n          await postToSlack(\n            slackId,\n            `${finalMessage} 전송되었습니다.\\n${tossLink}`,\n          )\n        }\n        setValues({mon: 0, tue: 0, wed: 0, thu: 0, fri: 0})\n        setPersonalValues({mon: 0, tue: 0, wed: 0, thu: 0, fri: 0})\n        setTextMessage('')\n        setCookie('textMessage', '', options)\n      } catch (err) {\n        console.error(err)\n        alert('메시지 전송 실패!')\n        return\n      }\n    } else {\n      console.error('전송취소')\n    }\n  }\n  const authButtonOnClickHandler = async () => {\n    try {\n      if (!username) {\n        throw new Error('이름을 입력해주세요.')\n      } else if (!slackId) {\n        throw new Error('슬랙 아이디를 확인해주세요.')\n      } else if (!slackToken) {\n        throw new Error('슬랙 토큰을 확인해주세요.')\n      }\n      await postToSlack(slackId, '인증되었습니다.')\n      console.log('done')\n      setIsAuth(true)\n      setCookie('isAuth', true, options)\n    } catch (err) {\n      alert(err.message)\n      return\n    }\n  }\n\n  if (!isAuth) {\n    return (\n      <Container className=\"mt-2\">\n        <Row className=\"justify-content-center align-self-center\">\n          <Col lg={6}>\n            <Card bg=\"Light\" className=\"mt-5\">\n              <Card.Body>\n                <Form.Group>\n                  <Form.Control\n                    type=\"text\"\n                    className=\"mb-3\"\n                    placeholder=\"Slack Token\"\n                    value={slackToken}\n                    onInput={(event) =>\n                      valueInputHandler(event.target.value, 'token')\n                    }\n                  />\n                  <Row>\n                    <Col>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Slack ID\"\n                        value={slackId}\n                        onInput={slackIdInputHandler}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"이름\"\n                        value={username}\n                        onInput={usernameInputHandler}\n                      />\n                    </Col>\n                  </Row>\n                  <Button\n                    className=\"my-4\"\n                    onClick={authButtonOnClickHandler}\n                    variant=\"outline-info\"\n                    block>\n                    인증\n                  </Button>\n                </Form.Group>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    )\n  }\n  return (\n    <Container className=\"mt-2\">\n      <Row className=\"justify-content-center align-self-center\">\n        <Col lg={6}>\n          <Card bg=\"Light\">\n            <Card.Body>\n              <Form.Group>\n                <Row>\n                  <Form.Group className=\"ml-3\" controlId=\"formBasicCheckbox\">\n                    <Form.Check\n                      checked={!!tossOpenAgree}\n                      onChange={() => {\n                        const agree = tossOpenAgree ? 0 : 1\n                        setTossOpenAgree(agree)\n                        setCookie('tossOpenAgree', agree, options)\n                      }}\n                      type=\"checkbox\"\n                      label=\"토스 송금 열기 (모바일 전용)\"\n                    />\n                  </Form.Group>\n                  <Button\n                    className=\"ml-auto mr-3\"\n                    style={{margin: 0}}\n                    size=\"sm\"\n                    onClick={() => setIsAuth(false)}\n                    variant=\"outline-danger\">\n                    정보수정\n                  </Button>\n                </Row>\n                <hr />\n                <Row>\n                  <Col>\n                    <p className=\"text-center\">법인</p>\n                    {Object.keys(values).map((day, i) => (\n                      <div key={day}>\n                        <Form.Label column lg={2}>\n                          {days[i]}\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          value={values[day]}\n                          onFocus={() => valueInputHandler('', day)}\n                          onInput={(event) =>\n                            valueInputHandler(parseInt(event.target.value), day)\n                          }\n                        />\n                      </div>\n                    ))}\n                  </Col>\n                  <Col>\n                    <p className=\"text-center\">개인</p>\n                    {Object.keys(values).map((day, i) => (\n                      <div key={day}>\n                        <Form.Label column lg={2}>\n                          {days[i]}\n                        </Form.Label>\n                        <Form.Control\n                          type=\"number\"\n                          value={personalValues[day]}\n                          onFocus={() => valueInputHandler('', day, 'personal')}\n                          onInput={(event) =>\n                            valueInputHandler(\n                              parseInt(event.target.value),\n                              day,\n                              'personal',\n                            )\n                          }\n                        />\n                      </div>\n                    ))}\n                  </Col>\n                </Row>\n              </Form.Group>\n            </Card.Body>\n            <Card.Footer>\n              <Row>\n                <Col>\n                  <p>[법인카드] {username}</p>\n                  <p>총지출액: {comma(sum.co)}</p>\n                  <p>개인부담금: {comma(calSum.co)}</p>\n                </Col>\n                <Col>\n                  <p>[개인카드] {username}</p>\n                  <p>총지출액: {comma(sum.pers)}</p>\n                  <p>회사부담금: {comma(calSum.pers)}</p>\n                </Col>\n              </Row>\n              <hr />\n              <Form.Group>\n                <Form.Label>추가설명</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={textMessage}\n                  placeholder={'설명이 필요한 경우 작성해주세요.'}\n                  onInput={(event) =>\n                    textMessageInputHandler(event.target.value)\n                  }\n                />\n              </Form.Group>\n              <Button\n                className=\"my-4\"\n                onClick={sendButtonOnClickHandler}\n                variant=\"outline-success\"\n                block>\n                전송\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}